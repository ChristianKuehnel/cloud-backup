#!/bin/bash
set -eu
set -o pipefail

SCRIPTDIR=$(cd "$(dirname "$0")" && pwd)
ROOTDIR=$(dirname $SCRIPTDIR)
CFGFILE=$ROOTDIR/backup.cfg
HOSTNAME=$(hostname)
LOGFILE=$ROOTDIR/backup.log
NEXTCLOUD_DB_DUMP=/tmp/nextcloud_database.bak
GET_CONFIG_SCRIPT=$SCRIPTDIR/get_db_config.php
VENV_DIR=$ROOTDIR/venv
RESTIC_URL=https://github.com/restic/restic/releases/download/v0.9.5/restic_0.9.5_linux_amd64.bz2
RESTIC=$ROOTDIR/restic

# functions #############
error() {
  printf '\E[31m'; echo "$@"; printf '\E[0m' | tee -a $LOGFILE
}

log() {
  echo "$(date --rfc-3339=seconds): $@" | tee -a $LOGFILE
}

failure() {
  if [ ! -z "${NEXTCLOUD_DIR:-}" ] ; then
    log "disabling maintenance mode..."
    nextcloud_maintenance_mode --off
  fi
  error "Execution failed!"
  trap '' EXIT
  exit -1
}


backup_dir() {
  log "Backing up $1 to $BACKUP_TARGET ..."
  RESTIC_PASSWORD=$PASSWORD $RESTIC backup -r $BACKUP_TARGET --verbose $1 | tee -a $LOGFILE
}

backup_dirs(){
  for d in ${SOURCE_DIRS[@]}
  do
    backup_dir $d
  done
}

nextcloud_maintenance_mode(){
  bash -c "cd /var/www/nextcloud;sudo -u www-data php occ maintenance:mode $1" | tee -a $LOGFILE
}

backup_nextcloud(){
  log "Creating backup of nextcloud instance in $1"
  if [ ! -d $1 ] ; then
    error "dir not found: $1"
    failure
  fi

  # read database configuration from config.php into variables
  log "Reading Nextcloud config..."
  eval "$($GET_CONFIG_SCRIPT)"
  
  nextcloud_maintenance_mode  --on

  log "Dumping database and backing it up..."
  mysqldump --single-transaction --host=$dbhost --user=$dbuser --password=$dbpassword $dbname \
     | RESTIC_PASSWORD=$PASSWORD $RESTIC backup -r $BACKUP_TARGET --verbose --stdin --stdin-filename sqldump\
     | tee -a $LOGFILE
 
  
  # backup the nextcloud folder and the database dump in one step
  log "Backing up files..."
  backup_dir $NEXTCLOUD_DIR 

  log "resuming nextcloud..."
  nextcloud_maintenance_mode --off 
}

cmd_init(){
  if [ ! -f $RESTIC ] ; then
    log "getting restic binary..."
    wget $RESTIC_URL -O ${RESTIC}.bz2
    bzip2 -d ${RESTIC}.bz2
    chmod +x $RESTIC
  fi
  log "setting up repository at $BACKUP_TARGET.."
  RESTIC_PASSWORD=$PASSWORD $RESTIC init -r $BACKUP_TARGET
}

cmd_backup() {
  if [ ! -z "${SOURCE_DIRS:-}" ] ; then
    backup_dirs
  fi
  
  
  if [ ! -z "${NEXTCLOUD_DIR:-}" ] ; then
    backup_nextcloud $NEXTCLOUD_DIR
  fi
}


# main #################
trap failure EXIT

if [ ! -f $CFGFILE ] ; then
  error "Config files does not exist: $CFGFILE"
  failure
fi

log "Using config file: $CFGFILE"
. $CFGFILE

if [ $# -eq 0 ]
  then
    log "No arguments supplied!"
    log "use one of: init backup"
    exit -1
fi
case $1 in
init)
  cmd_init
  ;;
backup)
  cmd_backup
  ;;
esac

log "Done."
trap '' EXIT


